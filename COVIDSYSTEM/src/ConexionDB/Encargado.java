/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ConexionDB;
import java.sql.*;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Daniel Xithe
 */
public class Encargado extends javax.swing.JFrame {

    /**
     * Creates new form DatosPersonales
     */
    public Encargado() {
        initComponents();
        setLocationRelativeTo(null);
        MostrarDatos();
        MostrarRegistrosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        txtNomEncargado = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtNombreUnidad = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCovid = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        txtIdEncargado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel10.setText("Nombre de la unidad");

        txtNomEncargado.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel11.setText("Direccion");

        jLabel12.setFont(new java.awt.Font("Dialog", 3, 20)); // NOI18N
        jLabel12.setText("Correo");

        jLabel13.setFont(new java.awt.Font("Dialog", 3, 20)); // NOI18N
        jLabel13.setText("Telefono");

        txtDireccion.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtCorreo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtNombreUnidad.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtNombreUnidad.setToolTipText("");

        txtTelefono.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Dialog", 3, 20)); // NOI18N
        jLabel18.setText("Nombre del encargado");

        jLabel9.setFont(new java.awt.Font("Dialog", 3, 26)); // NOI18N
        jLabel9.setText("DATOS DE HOSPITALES ");

        tblCovid.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        tblCovid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCovid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCovidMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCovid);

        btnGuardar.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        Limpiar.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Dialog", 3, 20)); // NOI18N
        jLabel24.setText("Id Encargado");

        txtIdEncargado.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtIdEncargado.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardar)
                .addGap(156, 156, 156)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActualizar)
                .addGap(97, 97, 97)
                .addComponent(Limpiar)
                .addGap(506, 506, 506))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdEncargado, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                            .addComponent(txtNombreUnidad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(198, 198, 198)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNomEncargado, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                            .addComponent(txtTelefono)
                            .addComponent(txtCorreo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(800, 800, 800)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1653, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(txtNomEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(txtIdEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombreUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGuardar)
                        .addComponent(btnEliminar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Limpiar)
                        .addComponent(btnActualizar)))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            Connection con1 = null;
            ConexionBase conectado = new ConexionBase();
            con1=conectado.getConnection();
            Statement st= con1.createStatement();
            String SQLGuardar ="INSERT INTO Encargado(Id_Encargado,NombreUnidad,Direccion,NomEncargado,Correo,Telefono)VALUES(?,?,?,?,?,?)";
            PreparedStatement pst = con1.prepareCall(SQLGuardar);
            pst.setInt(1,Integer.parseInt(txtIdEncargado.getText()));
            pst.setString(2,txtNombreUnidad.getText());
            pst.setString(3,txtDireccion.getText());
            pst.setString(4,txtCorreo.getText());
            pst.setString(5,txtTelefono.getText());
            pst.setString(6,txtNomEncargado.getText());
         
            int n= pst.executeUpdate();
            pst.close();
            if (n>0){
                JOptionPane.showMessageDialog(null, "Datos guardados exitosamente");
                limpiar();
                MostrarDatos();
                MostrarRegistrosTabla();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar los datos: "+e);
            System.out.println(e);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_LimpiarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        int fila= this.tblCovid.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(null, "Seleccione para actualizar un registro");
        }else{
            try {
                Connection con2=null;
                ConexionBase conectado= new ConexionBase();
                con2=conectado.getConnection();
                Statement st= con2.createStatement();
                String SQLModificar ="UPDATE Encargado SET NombreUnidad = ?,Direccion = ?,NomEncargado = ?, Correo = ?, Telefono = ?  WHERE Id_Encargado = ?";
                PreparedStatement pst=con2.prepareStatement(SQLModificar);
                pst.setInt(6,Integer.parseInt(txtIdEncargado.getText()));
                pst.setString(1,txtNombreUnidad.getText());
                pst.setString(2,txtDireccion.getText());
                pst.setString(3,txtCorreo.getText());
                pst.setString(4,txtTelefono.getText());
                pst.setString(5,txtNomEncargado.getText());
                
                
                int s=pst.executeUpdate();
                pst.close();
                if(s>0){
                    JOptionPane.showMessageDialog(this, "Datos actualizados");
                    MostrarDatos();
                    MostrarRegistrosTabla();
                }
                
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Error al actualizar los datos"+ e);
            }
        }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int fila=tblCovid.getSelectedRow();
        if (fila==-1){
            JOptionPane.showMessageDialog(this,"Seleccione primero un registro para eliminarlo");
        }else{
            int Eliminar=JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminarlo?","Pregunta",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
            if (Eliminar==JOptionPane.YES_OPTION){
                try {
                    Connection con3 = null;
                    ConexionBase Conexion = new ConexionBase();
                    con3=Conexion.getConnection();
                    Statement st= con3.createStatement();
                    String SQLElimina="DELETE * FROM Encargado WHERE Id_Encargado=?";
                    PreparedStatement pst=con3.prepareStatement(SQLElimina);
                    pst.setInt(1, Integer.parseInt(txtIdEncargado.getText()));
                    int n=pst.executeUpdate();
                    if(n>0){
                        JOptionPane.showMessageDialog(this,"Registro eliminado");
                        limpiar();
                        MostrarDatos();
                        MostrarRegistrosTabla();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this,"Error al eliminar datos: "+e);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblCovidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCovidMouseClicked
        // TODO add your handling code here:
        try {
            int fila = tblCovid.getSelectedRow();
            this.txtIdEncargado.setText(tblCovid.getValueAt(fila, 0).toString());
            this.txtNombreUnidad.setText(tblCovid.getValueAt(fila, 1).toString());
            this.txtDireccion.setText(tblCovid.getValueAt(fila, 2).toString());
            this.txtCorreo.setText(tblCovid.getValueAt(fila, 3).toString());
            this.txtTelefono.setText(tblCovid.getValueAt(fila, 4).toString());
            this.txtNomEncargado.setText(tblCovid.getValueAt(fila, 5).toString());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error al seleccionar datos"+ e);
        }
    }//GEN-LAST:event_tblCovidMouseClicked

    public void MostrarDatos(){
        DefaultTableModel MiTabla=(DefaultTableModel)tblCovid.getModel();
        String EncabezadoTabla[]={"Id_Encargado","NombreUnidad","Direccion","NomEncargado","Correo","Telefono"};
        MiTabla= new DefaultTableModel(null,EncabezadoTabla);
        tblCovid.setModel(MiTabla);        
    }
    public void MostrarRegistrosTabla(){
    try {
        Connection conex=null;
        DefaultTableModel LaMismaTabla = (DefaultTableModel)tblCovid.getModel();
        ConexionBase conectame=new ConexionBase();
        conex=conectame.getConnection();
        String Registro[]= new String[6];
        String SQL="SELECT * FROM Encargado";
        Statement sentencia=conex.createStatement();
        ResultSet rst=sentencia.executeQuery(SQL);
        while(rst.next()){
            Registro[0]=rst.getString("Id_Encargado");
            Registro[1]=rst.getString("NombreUnidad");
            Registro[2]=rst.getString("Direccion");
            Registro[3]=rst.getString("NomEncargado");
            Registro[4]=rst.getString("Correo");
            Registro[5]=rst.getString("Telefono");
            
            
            LaMismaTabla.addRow(Registro);
        }
        tblCovid.setModel(LaMismaTabla);
          
    } catch (Exception e) {
        JOptionPane.showConfirmDialog(null, "se ha producido un error al cargar los datos: "+e);
    }
}
    
    
public void limpiar(){
    
    this.txtIdEncargado.setText("");
    this.txtNombreUnidad.setText("");
    this.txtDireccion.setText("");
    this.txtCorreo.setText("");
    this.txtTelefono.setText("");
    this.txtNomEncargado.setText("");
}    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Encargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Encargado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCovid;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdEncargado;
    private javax.swing.JTextField txtNomEncargado;
    private javax.swing.JTextField txtNombreUnidad;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
